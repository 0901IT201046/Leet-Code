class Solution {
public:
    
    vector<int> findSubstring(string s, vector<string>& words) {
        vector<int> answer; 
        int length = words.size()*words[0].size();
        if(s.size()<length) return {};
        unordered_map<string,int> hash;
        unordered_map<string,int> temp;
        for(string item:words) hash[item]++;
        temp = hash;
        for(int i=0;i<=s.size()-length;i++){
            int index = i;
            while(index<i+length){
                string target = s.substr(index,words[0].size());
                if(temp.count(target)){
                    temp[target]==1 ? temp.erase(target) : temp[target]--;
                    index += words[0].size();
                }else{
                    break;
                }
                if(temp.empty()) {
                    answer.push_back(i);
                    break;
                }
            }
            temp = hash;
        }
        
        return answer;
    }
};
